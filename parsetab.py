
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "BINARY_OPERATOR BOOLEAN CATCH COMMAND ELSE FLOAT FN GLOBAL ID IF INTEGER RET SIGN STRING TOKEN TRY UNITARY_OPERATOR\n    run : program\n    \n    program : program function\n            | program function_call\n            | program variable\n            | program token\n            | function\n            | function_call\n            | variable\n            | token\n    \n    function : FN id '(' parameter ')' '{' body '}'\n             | COMMAND id '(' parameter ')' '{' body '}'\n    \n    token : TOKEN '(' string ')'\n    \n    function_call : id '(' term_list ')' \n    \n    parameter : id ',' parameter\n              | id\n              | empty\n    \n    body : body exp\n         | body variable\n         | body return\n         | body global\n         | exp\n         | variable\n         | return\n         | global\n    \n    exp : term binop exp\n        | term\n        | IF exp '{' body '}' ELSE '{' body '}'\n        | IF exp '{' body '}'\n        | TRY '{' body '}' CATCH '{' body '}'\n    \n    variable : id '=' exp \n    \n    return : RET id\n    \n    global : GLOBAL term_list\n    \n    term_map : term ':' term ',' term_map\n             | term ':' term\n    \n    term_list : term_list ',' term\n              | term\n    \n    term : unop term\n         | number\n         | boolean\n         | string\n         | function_call\n         | id\n         | list\n         | dict\n         | empty\n    \n    unop : SIGN\n         | UNITARY_OPERATOR\n    \n    binop : SIGN\n          | BINARY_OPERATOR\n    \n    dict : '{' term_map '}'\n         | '{' empty '}'\n    \n    list : '[' term_list ']'\n    \n    number : FLOAT\n           | INTEGER\n    \n    boolean : BOOLEAN\n    \n    string : STRING\n    \n    id : ID\n    \n    empty :\n    "
    
_lr_action_items = {'FN':([0,2,3,4,5,6,11,12,13,14,15,18,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,42,50,52,57,58,59,63,67,68,69,71,96,99,103,107,108,],[7,7,-6,-7,-8,-9,-57,-2,-3,-4,-5,-58,-42,-58,-38,-39,-40,-41,-43,-44,-45,-46,-47,-53,-54,-55,-56,-30,-26,-13,-37,-58,-48,-49,-12,-52,-50,-51,-25,-28,-10,-11,-29,-27,]),'COMMAND':([0,2,3,4,5,6,11,12,13,14,15,18,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,42,50,52,57,58,59,63,67,68,69,71,96,99,103,107,108,],[9,9,-6,-7,-8,-9,-57,-2,-3,-4,-5,-58,-42,-58,-38,-39,-40,-41,-43,-44,-45,-46,-47,-53,-54,-55,-56,-30,-26,-13,-37,-58,-48,-49,-12,-52,-50,-51,-25,-28,-10,-11,-29,-27,]),'TOKEN':([0,2,3,4,5,6,11,12,13,14,15,18,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,42,50,52,57,58,59,63,67,68,69,71,96,99,103,107,108,],[10,10,-6,-7,-8,-9,-57,-2,-3,-4,-5,-58,-42,-58,-38,-39,-40,-41,-43,-44,-45,-46,-47,-53,-54,-55,-56,-30,-26,-13,-37,-58,-48,-49,-12,-52,-50,-51,-25,-28,-10,-11,-29,-27,]),'ID':([0,2,3,4,5,6,7,9,11,12,13,14,15,17,18,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,50,51,52,57,58,59,61,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,85,87,88,89,90,91,92,93,94,95,96,98,99,102,103,104,105,106,107,108,],[11,11,-6,-7,-8,-9,11,11,-57,-2,-3,-4,-5,11,11,11,-42,-36,11,-38,-39,-40,-41,-43,-44,-45,-46,-47,-53,-54,-55,-56,11,11,-30,-26,11,11,-13,11,-37,11,-48,-49,11,-12,11,-35,-52,-50,-51,11,-25,11,11,-21,-22,-23,-24,-42,11,11,11,11,-17,-18,-19,-20,-31,-32,11,11,11,-28,11,-10,11,-11,11,11,11,-29,-27,]),'$end':([1,2,3,4,5,6,11,12,13,14,15,18,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,42,50,52,57,58,59,63,67,68,69,71,96,99,103,107,108,],[0,-1,-6,-7,-8,-9,-57,-2,-3,-4,-5,-58,-42,-58,-38,-39,-40,-41,-43,-44,-45,-46,-47,-53,-54,-55,-56,-30,-26,-13,-37,-58,-48,-49,-12,-52,-50,-51,-25,-28,-10,-11,-29,-27,]),'(':([8,10,11,16,19,22,78,],[17,20,-57,21,45,17,17,]),'=':([8,11,78,],[18,-57,18,]),')':([11,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,45,46,47,48,49,50,51,52,62,64,66,67,68,69,82,],[-57,-58,-58,-42,50,-36,-58,-38,-39,-40,-41,-43,-44,-45,-46,-47,-53,-54,-55,-56,-58,63,-15,65,-16,-13,-58,-37,81,-58,-35,-52,-50,-51,-14,]),',':([11,17,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,47,50,51,52,53,66,67,68,69,70,80,84,92,],[-57,-58,-42,51,-36,-58,-38,-39,-40,-41,-43,-44,-45,-46,-47,-53,-54,-55,-56,-58,64,-13,-58,-37,51,-35,-52,-50,-51,-58,-58,95,51,]),'SIGN':([11,17,18,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,50,51,52,57,58,59,61,66,67,68,69,70,71,72,73,74,75,76,77,78,80,83,85,87,88,89,90,91,92,93,94,95,96,98,102,104,105,106,107,108,],[-57,33,33,-42,-36,33,-38,-39,-40,-41,-43,-44,-45,-46,-47,-53,-54,-55,-56,33,33,-30,58,33,-13,33,-37,33,-48,-49,33,-35,-52,-50,-51,33,-25,33,33,-21,-22,-23,-24,-42,33,33,33,-17,-18,-19,-20,-31,-32,33,33,33,-28,33,33,33,33,33,-29,-27,]),'BINARY_OPERATOR':([11,18,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,42,43,50,51,52,57,58,59,61,66,67,68,69,71,72,73,74,75,76,77,78,80,83,85,87,88,89,90,91,92,93,94,96,98,102,104,105,106,107,108,],[-57,-58,-42,-36,-58,-38,-39,-40,-41,-43,-44,-45,-46,-47,-53,-54,-55,-56,-30,59,-58,-13,-58,-37,-58,-48,-49,-58,-35,-52,-50,-51,-25,-58,-58,-21,-22,-23,-24,-42,-58,-58,-58,-17,-18,-19,-20,-31,-32,-58,-58,-28,-58,-58,-58,-58,-58,-29,-27,]),'}':([11,18,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,50,51,52,54,55,57,58,59,61,66,67,68,69,70,71,72,73,74,75,76,77,78,80,83,84,85,87,88,89,90,91,92,93,94,96,98,100,102,104,105,106,107,108,],[-57,-58,-42,-36,-58,-38,-39,-40,-41,-43,-44,-45,-46,-47,-53,-54,-55,-56,-58,-30,-26,-13,-58,-37,68,69,-58,-48,-49,-58,-35,-52,-50,-51,-58,-25,-58,86,-21,-22,-23,-24,-42,-58,-58,-34,96,-17,-18,-19,-20,-31,-32,-58,99,-28,103,-33,-58,-58,107,108,-29,-27,]),'IF':([11,18,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,42,43,50,51,52,57,58,59,61,66,67,68,69,71,72,73,74,75,76,77,78,80,83,85,87,88,89,90,91,92,93,94,96,98,102,104,105,106,107,108,],[-57,43,-42,-36,-58,-38,-39,-40,-41,-43,-44,-45,-46,-47,-53,-54,-55,-56,-30,-26,43,-13,-58,-37,43,-48,-49,43,-35,-52,-50,-51,-25,43,43,-21,-22,-23,-24,-42,-58,43,43,-17,-18,-19,-20,-31,-32,43,43,-28,43,43,43,43,43,-29,-27,]),'TRY':([11,18,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,42,43,50,51,52,57,58,59,61,66,67,68,69,71,72,73,74,75,76,77,78,80,83,85,87,88,89,90,91,92,93,94,96,98,102,104,105,106,107,108,],[-57,44,-42,-36,-58,-38,-39,-40,-41,-43,-44,-45,-46,-47,-53,-54,-55,-56,-30,-26,44,-13,-58,-37,44,-48,-49,44,-35,-52,-50,-51,-25,44,44,-21,-22,-23,-24,-42,-58,44,44,-17,-18,-19,-20,-31,-32,44,44,-28,44,44,44,44,44,-29,-27,]),'RET':([11,18,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,42,50,51,52,57,58,59,61,66,67,68,69,71,72,73,74,75,76,77,78,80,83,85,87,88,89,90,91,92,93,94,96,98,102,104,105,106,107,108,],[-57,-58,-42,-36,-58,-38,-39,-40,-41,-43,-44,-45,-46,-47,-53,-54,-55,-56,-30,-26,-13,-58,-37,-58,-48,-49,79,-35,-52,-50,-51,-25,79,79,-21,-22,-23,-24,-42,-58,79,79,-17,-18,-19,-20,-31,-32,79,79,-28,79,79,79,79,79,-29,-27,]),'GLOBAL':([11,18,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,42,50,51,52,57,58,59,61,66,67,68,69,71,72,73,74,75,76,77,78,80,83,85,87,88,89,90,91,92,93,94,96,98,102,104,105,106,107,108,],[-57,-58,-42,-36,-58,-38,-39,-40,-41,-43,-44,-45,-46,-47,-53,-54,-55,-56,-30,-26,-13,-58,-37,-58,-48,-49,80,-35,-52,-50,-51,-25,80,80,-21,-22,-23,-24,-42,-58,80,80,-17,-18,-19,-20,-31,-32,80,80,-28,80,80,80,80,80,-29,-27,]),'UNITARY_OPERATOR':([11,17,18,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,50,51,52,57,58,59,61,66,67,68,69,70,71,72,73,74,75,76,77,78,80,83,85,87,88,89,90,91,92,93,94,95,96,98,102,104,105,106,107,108,],[-57,34,34,-42,-36,34,-38,-39,-40,-41,-43,-44,-45,-46,-47,-53,-54,-55,-56,34,34,-30,-26,34,-13,34,-37,34,-48,-49,34,-35,-52,-50,-51,34,-25,34,34,-21,-22,-23,-24,-42,34,34,34,-17,-18,-19,-20,-31,-32,34,34,34,-28,34,34,34,34,34,-29,-27,]),'FLOAT':([11,17,18,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,50,51,52,57,58,59,61,66,67,68,69,70,71,72,73,74,75,76,77,78,80,83,85,87,88,89,90,91,92,93,94,95,96,98,102,104,105,106,107,108,],[-57,35,35,-42,-36,35,-38,-39,-40,-41,-43,-44,-45,-46,-47,-53,-54,-55,-56,35,35,-30,-26,35,-13,35,-37,35,-48,-49,35,-35,-52,-50,-51,35,-25,35,35,-21,-22,-23,-24,-42,35,35,35,-17,-18,-19,-20,-31,-32,35,35,35,-28,35,35,35,35,35,-29,-27,]),'INTEGER':([11,17,18,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,50,51,52,57,58,59,61,66,67,68,69,70,71,72,73,74,75,76,77,78,80,83,85,87,88,89,90,91,92,93,94,95,96,98,102,104,105,106,107,108,],[-57,36,36,-42,-36,36,-38,-39,-40,-41,-43,-44,-45,-46,-47,-53,-54,-55,-56,36,36,-30,-26,36,-13,36,-37,36,-48,-49,36,-35,-52,-50,-51,36,-25,36,36,-21,-22,-23,-24,-42,36,36,36,-17,-18,-19,-20,-31,-32,36,36,36,-28,36,36,36,36,36,-29,-27,]),'BOOLEAN':([11,17,18,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,50,51,52,57,58,59,61,66,67,68,69,70,71,72,73,74,75,76,77,78,80,83,85,87,88,89,90,91,92,93,94,95,96,98,102,104,105,106,107,108,],[-57,37,37,-42,-36,37,-38,-39,-40,-41,-43,-44,-45,-46,-47,-53,-54,-55,-56,37,37,-30,-26,37,-13,37,-37,37,-48,-49,37,-35,-52,-50,-51,37,-25,37,37,-21,-22,-23,-24,-42,37,37,37,-17,-18,-19,-20,-31,-32,37,37,37,-28,37,37,37,37,37,-29,-27,]),'STRING':([11,17,18,20,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,50,51,52,57,58,59,61,66,67,68,69,70,71,72,73,74,75,76,77,78,80,83,85,87,88,89,90,91,92,93,94,95,96,98,102,104,105,106,107,108,],[-57,38,38,38,-42,-36,38,-38,-39,-40,-41,-43,-44,-45,-46,-47,-53,-54,-55,-56,38,38,-30,-26,38,-13,38,-37,38,-48,-49,38,-35,-52,-50,-51,38,-25,38,38,-21,-22,-23,-24,-42,38,38,38,-17,-18,-19,-20,-31,-32,38,38,38,-28,38,38,38,38,38,-29,-27,]),'[':([11,17,18,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,50,51,52,57,58,59,61,66,67,68,69,70,71,72,73,74,75,76,77,78,80,83,85,87,88,89,90,91,92,93,94,95,96,98,102,104,105,106,107,108,],[-57,39,39,-42,-36,39,-38,-39,-40,-41,-43,-44,-45,-46,-47,-53,-54,-55,-56,39,39,-30,-26,39,-13,39,-37,39,-48,-49,39,-35,-52,-50,-51,39,-25,39,39,-21,-22,-23,-24,-42,39,39,39,-17,-18,-19,-20,-31,-32,39,39,39,-28,39,39,39,39,39,-29,-27,]),'{':([11,17,18,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,50,51,52,57,58,59,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,83,85,87,88,89,90,91,92,93,94,95,96,97,98,101,102,104,105,106,107,108,],[-57,40,40,-42,-36,40,-38,-39,-40,-41,-43,-44,-45,-46,-47,-53,-54,-55,-56,40,40,-30,-26,40,61,-13,40,-37,40,-48,-49,72,40,83,-35,-52,-50,-51,40,-25,40,40,-21,-22,-23,-24,-42,40,93,40,40,-17,-18,-19,-20,-31,-32,40,40,40,-28,102,40,104,40,40,40,40,-29,-27,]),']':([11,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,50,51,52,53,66,67,68,69,],[-57,-42,-36,-58,-38,-39,-40,-41,-43,-44,-45,-46,-47,-53,-54,-55,-56,-58,-13,-58,-37,67,-35,-52,-50,-51,]),':':([11,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,50,52,55,56,67,68,69,95,],[-57,-42,-58,-38,-39,-40,-41,-43,-44,-45,-46,-47,-53,-54,-55,-56,-58,-13,-37,-45,70,-52,-50,-51,-58,]),'CATCH':([86,],[97,]),'ELSE':([96,],[101,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'run':([0,],[1,]),'program':([0,],[2,]),'function':([0,2,],[3,12,]),'function_call':([0,2,17,18,25,39,40,43,51,57,61,70,72,73,80,83,85,93,94,95,98,102,104,105,106,],[4,13,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'variable':([0,2,61,72,73,83,85,93,94,98,102,104,105,106,],[5,14,75,75,88,75,88,75,88,88,75,75,88,88,]),'token':([0,2,],[6,15,]),'id':([0,2,7,9,17,18,21,25,39,40,43,45,51,57,61,64,70,72,73,79,80,83,85,93,94,95,98,102,104,105,106,],[8,8,16,19,22,22,47,22,22,22,22,47,22,22,78,47,22,78,78,91,22,78,78,78,78,22,78,78,78,78,78,]),'term_list':([17,39,80,],[23,53,92,]),'term':([17,18,25,39,40,43,51,57,61,70,72,73,80,83,85,93,94,95,98,102,104,105,106,],[24,42,52,24,56,42,66,42,42,84,42,42,24,42,42,42,42,56,42,42,42,42,42,]),'unop':([17,18,25,39,40,43,51,57,61,70,72,73,80,83,85,93,94,95,98,102,104,105,106,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'number':([17,18,25,39,40,43,51,57,61,70,72,73,80,83,85,93,94,95,98,102,104,105,106,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'boolean':([17,18,25,39,40,43,51,57,61,70,72,73,80,83,85,93,94,95,98,102,104,105,106,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'string':([17,18,20,25,39,40,43,51,57,61,70,72,73,80,83,85,93,94,95,98,102,104,105,106,],[28,28,46,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'list':([17,18,25,39,40,43,51,57,61,70,72,73,80,83,85,93,94,95,98,102,104,105,106,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'dict':([17,18,25,39,40,43,51,57,61,70,72,73,80,83,85,93,94,95,98,102,104,105,106,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'empty':([17,18,21,25,39,40,43,45,51,57,61,64,70,72,73,80,83,85,93,94,95,98,102,104,105,106,],[32,32,49,32,32,55,32,49,32,32,32,49,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'exp':([18,43,57,61,72,73,83,85,93,94,98,102,104,105,106,],[41,60,71,74,74,87,74,87,74,87,87,74,74,87,87,]),'parameter':([21,45,64,],[48,62,82,]),'term_map':([40,95,],[54,100,]),'binop':([42,],[57,]),'body':([61,72,83,93,102,104,],[73,85,94,98,105,106,]),'return':([61,72,73,83,85,93,94,98,102,104,105,106,],[76,76,89,76,89,76,89,89,76,76,89,89,]),'global':([61,72,73,83,85,93,94,98,102,104,105,106,],[77,77,90,77,90,77,90,90,77,77,90,90,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> run","S'",1,None,None,None),
  ('run -> program','run',1,'p_run','main.py',81),
  ('program -> program function','program',2,'p_program','main.py',89),
  ('program -> program function_call','program',2,'p_program','main.py',90),
  ('program -> program variable','program',2,'p_program','main.py',91),
  ('program -> program token','program',2,'p_program','main.py',92),
  ('program -> function','program',1,'p_program','main.py',93),
  ('program -> function_call','program',1,'p_program','main.py',94),
  ('program -> variable','program',1,'p_program','main.py',95),
  ('program -> token','program',1,'p_program','main.py',96),
  ('function -> FN id ( parameter ) { body }','function',8,'p_function','main.py',105),
  ('function -> COMMAND id ( parameter ) { body }','function',8,'p_function','main.py',106),
  ('token -> TOKEN ( string )','token',4,'p_token','main.py',112),
  ('function_call -> id ( term_list )','function_call',4,'p_function_call','main.py',118),
  ('parameter -> id , parameter','parameter',3,'p_parameter','main.py',124),
  ('parameter -> id','parameter',1,'p_parameter','main.py',125),
  ('parameter -> empty','parameter',1,'p_parameter','main.py',126),
  ('body -> body exp','body',2,'p_body','main.py',135),
  ('body -> body variable','body',2,'p_body','main.py',136),
  ('body -> body return','body',2,'p_body','main.py',137),
  ('body -> body global','body',2,'p_body','main.py',138),
  ('body -> exp','body',1,'p_body','main.py',139),
  ('body -> variable','body',1,'p_body','main.py',140),
  ('body -> return','body',1,'p_body','main.py',141),
  ('body -> global','body',1,'p_body','main.py',142),
  ('exp -> term binop exp','exp',3,'p_exp','main.py',151),
  ('exp -> term','exp',1,'p_exp','main.py',152),
  ('exp -> IF exp { body } ELSE { body }','exp',9,'p_exp','main.py',153),
  ('exp -> IF exp { body }','exp',5,'p_exp','main.py',154),
  ('exp -> TRY { body } CATCH { body }','exp',8,'p_exp','main.py',155),
  ('variable -> id = exp','variable',3,'p_variable','main.py',170),
  ('return -> RET id','return',2,'p_return','main.py',176),
  ('global -> GLOBAL term_list','global',2,'p_global','main.py',182),
  ('term_map -> term : term , term_map','term_map',5,'p_term_map','main.py',188),
  ('term_map -> term : term','term_map',3,'p_term_map','main.py',189),
  ('term_list -> term_list , term','term_list',3,'p_term_list','main.py',198),
  ('term_list -> term','term_list',1,'p_term_list','main.py',199),
  ('term -> unop term','term',2,'p_term','main.py',208),
  ('term -> number','term',1,'p_term','main.py',209),
  ('term -> boolean','term',1,'p_term','main.py',210),
  ('term -> string','term',1,'p_term','main.py',211),
  ('term -> function_call','term',1,'p_term','main.py',212),
  ('term -> id','term',1,'p_term','main.py',213),
  ('term -> list','term',1,'p_term','main.py',214),
  ('term -> dict','term',1,'p_term','main.py',215),
  ('term -> empty','term',1,'p_term','main.py',216),
  ('unop -> SIGN','unop',1,'p_unop','main.py',225),
  ('unop -> UNITARY_OPERATOR','unop',1,'p_unop','main.py',226),
  ('binop -> SIGN','binop',1,'p_binop','main.py',232),
  ('binop -> BINARY_OPERATOR','binop',1,'p_binop','main.py',233),
  ('dict -> { term_map }','dict',3,'p_dict','main.py',239),
  ('dict -> { empty }','dict',3,'p_dict','main.py',240),
  ('list -> [ term_list ]','list',3,'p_list','main.py',246),
  ('number -> FLOAT','number',1,'p_number','main.py',252),
  ('number -> INTEGER','number',1,'p_number','main.py',253),
  ('boolean -> BOOLEAN','boolean',1,'p_boolean','main.py',259),
  ('string -> STRING','string',1,'p_string','main.py',265),
  ('id -> ID','id',1,'p_id','main.py',271),
  ('empty -> <empty>','empty',0,'p_empty','main.py',277),
]
