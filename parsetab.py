
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "BINARY_OPERATOR BOOLEAN CATCH COMMAND ELSE FLOAT FN HANDLER ID IF INTEGER SIGN STRING TRY UNITARY_OPERATOR\n    run : program\n    \n    program : program function\n            | program function_call\n            | program variable\n            | function\n            | function_call\n            | variable\n    \n    function : FN id '(' parameter ')' '{' body '}'\n             | COMMAND id '(' parameter ')' '{' body '}'\n             | HANDLER id '(' parameter ')' '{' body '}'\n    \n    function_call : id '(' term_list ')' \n    \n    parameter : id ',' parameter\n              | id\n              | empty\n    \n    body : body exp\n         | body variable\n         | exp\n         | variable\n    \n    exp : term binop exp\n        | term\n        | IF exp '{' body '}' ELSE '{' body '}'\n        | IF exp '{' body '}'\n        | TRY '{' body '}' CATCH '{' body '}'\n    \n    variable : id '=' exp \n    \n    term_map : term ':' term ',' term_map\n             | term ':' term\n    \n    term_list : term_list ',' term\n              | term\n    \n    term : unop term\n         | number\n         | boolean\n         | string\n         | function_call\n         | id\n         | list\n         | dict\n         | empty\n    \n    unop : SIGN\n         | UNITARY_OPERATOR\n    \n    binop : SIGN\n          | BINARY_OPERATOR\n    \n    dict : '{' term_map '}'\n         | '{' empty '}'\n    \n    list : '[' term_list ']'\n    \n    number : FLOAT\n           | INTEGER\n    \n    boolean : BOOLEAN\n    \n    string : STRING\n    \n    id : ID\n    \n    empty :\n    "
    
_lr_action_items = {'FN':([0,2,3,4,5,10,11,12,13,16,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,48,50,55,56,57,65,66,67,69,88,92,96,97,101,102,],[6,6,-5,-6,-7,-49,-2,-3,-4,-50,-34,-50,-30,-31,-32,-33,-35,-36,-37,-38,-39,-45,-46,-47,-48,-24,-20,-11,-29,-50,-40,-41,-44,-42,-43,-19,-22,-8,-9,-10,-23,-21,]),'COMMAND':([0,2,3,4,5,10,11,12,13,16,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,48,50,55,56,57,65,66,67,69,88,92,96,97,101,102,],[8,8,-5,-6,-7,-49,-2,-3,-4,-50,-34,-50,-30,-31,-32,-33,-35,-36,-37,-38,-39,-45,-46,-47,-48,-24,-20,-11,-29,-50,-40,-41,-44,-42,-43,-19,-22,-8,-9,-10,-23,-21,]),'HANDLER':([0,2,3,4,5,10,11,12,13,16,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,48,50,55,56,57,65,66,67,69,88,92,96,97,101,102,],[9,9,-5,-6,-7,-49,-2,-3,-4,-50,-34,-50,-30,-31,-32,-33,-35,-36,-37,-38,-39,-45,-46,-47,-48,-24,-20,-11,-29,-50,-40,-41,-44,-42,-43,-19,-22,-8,-9,-10,-23,-21,]),'ID':([0,2,3,4,5,6,8,9,10,11,12,13,15,16,19,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,48,49,50,55,56,57,59,62,65,66,67,68,69,70,71,72,73,74,78,80,82,83,84,85,86,87,88,90,91,92,95,96,97,98,99,100,101,102,],[10,10,-5,-6,-7,10,10,10,-49,-2,-3,-4,10,10,10,-34,10,-30,-31,-32,-33,-35,-36,-37,-38,-39,-45,-46,-47,-48,10,10,-24,-20,10,10,10,-11,10,-29,10,-40,-41,10,10,-44,-42,-43,10,-19,10,10,-17,-18,-34,10,10,-15,-16,10,10,10,10,-22,10,10,-8,10,-9,-10,10,10,10,-23,-21,]),'$end':([1,2,3,4,5,10,11,12,13,16,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,48,50,55,56,57,65,66,67,69,88,92,96,97,101,102,],[0,-1,-5,-6,-7,-49,-2,-3,-4,-50,-34,-50,-30,-31,-32,-33,-35,-36,-37,-38,-39,-45,-46,-47,-48,-24,-20,-11,-29,-50,-40,-41,-44,-42,-43,-19,-22,-8,-9,-10,-23,-21,]),'(':([7,10,14,17,18,20,74,],[15,-49,19,43,44,15,15,]),'=':([7,10,74,],[16,-49,16,]),')':([10,15,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,43,44,45,46,47,48,49,50,60,61,62,64,65,66,67,77,],[-49,-50,-50,-34,48,-28,-50,-30,-31,-32,-33,-35,-36,-37,-38,-39,-45,-46,-47,-48,-50,-50,-13,63,-14,-11,-50,-29,75,76,-50,-27,-44,-42,-43,-12,]),',':([10,15,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,45,48,49,50,51,64,65,66,67,68,79,],[-49,-50,-34,49,-28,-50,-30,-31,-32,-33,-35,-36,-37,-38,-39,-45,-46,-47,-48,-50,62,-11,-50,-29,49,-27,-44,-42,-43,-50,87,]),'SIGN':([10,15,16,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,48,49,50,55,56,57,59,65,66,67,68,69,70,71,72,73,74,78,80,82,83,84,85,86,87,88,90,91,95,98,99,100,101,102,],[-49,31,31,-34,31,-30,-31,-32,-33,-35,-36,-37,-38,-39,-45,-46,-47,-48,31,31,-24,56,31,-11,31,-29,31,-40,-41,31,-44,-42,-43,31,-19,31,31,-17,-18,-34,31,31,-15,-16,31,31,31,31,-22,31,31,31,31,31,31,-23,-21,]),'BINARY_OPERATOR':([10,16,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,41,48,50,55,56,57,59,65,66,67,69,70,71,72,73,74,78,80,82,83,84,85,86,88,90,91,95,98,99,100,101,102,],[-49,-50,-34,-50,-30,-31,-32,-33,-35,-36,-37,-38,-39,-45,-46,-47,-48,-24,57,-50,-11,-29,-50,-40,-41,-50,-44,-42,-43,-19,-50,-50,-17,-18,-34,-50,-50,-15,-16,-50,-50,-50,-22,-50,-50,-50,-50,-50,-50,-23,-21,]),'}':([10,16,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,48,50,52,53,55,56,57,59,65,66,67,68,69,70,71,72,73,74,78,79,80,82,83,84,85,86,88,90,91,93,95,98,99,100,101,102,],[-49,-50,-34,-50,-30,-31,-32,-33,-35,-36,-37,-38,-39,-45,-46,-47,-48,-50,-24,-20,-11,-29,66,67,-50,-40,-41,-50,-44,-42,-43,-50,-19,-50,81,-17,-18,-34,-50,-26,88,-15,-16,-50,-50,92,-22,96,97,-25,-50,-50,101,102,-23,-21,]),'IF':([10,16,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,41,48,50,55,56,57,59,65,66,67,69,70,71,72,73,74,78,80,82,83,84,85,86,88,90,91,95,98,99,100,101,102,],[-49,41,-34,-50,-30,-31,-32,-33,-35,-36,-37,-38,-39,-45,-46,-47,-48,-24,-20,41,-11,-29,41,-40,-41,41,-44,-42,-43,-19,41,41,-17,-18,-34,41,41,-15,-16,41,41,41,-22,41,41,41,41,41,41,-23,-21,]),'TRY':([10,16,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,41,48,50,55,56,57,59,65,66,67,69,70,71,72,73,74,78,80,82,83,84,85,86,88,90,91,95,98,99,100,101,102,],[-49,42,-34,-50,-30,-31,-32,-33,-35,-36,-37,-38,-39,-45,-46,-47,-48,-24,-20,42,-11,-29,42,-40,-41,42,-44,-42,-43,-19,42,42,-17,-18,-34,42,42,-15,-16,42,42,42,-22,42,42,42,42,42,42,-23,-21,]),'UNITARY_OPERATOR':([10,15,16,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,48,49,50,55,56,57,59,65,66,67,68,69,70,71,72,73,74,78,80,82,83,84,85,86,87,88,90,91,95,98,99,100,101,102,],[-49,32,32,-34,32,-30,-31,-32,-33,-35,-36,-37,-38,-39,-45,-46,-47,-48,32,32,-24,-20,32,-11,32,-29,32,-40,-41,32,-44,-42,-43,32,-19,32,32,-17,-18,-34,32,32,-15,-16,32,32,32,32,-22,32,32,32,32,32,32,-23,-21,]),'FLOAT':([10,15,16,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,48,49,50,55,56,57,59,65,66,67,68,69,70,71,72,73,74,78,80,82,83,84,85,86,87,88,90,91,95,98,99,100,101,102,],[-49,33,33,-34,33,-30,-31,-32,-33,-35,-36,-37,-38,-39,-45,-46,-47,-48,33,33,-24,-20,33,-11,33,-29,33,-40,-41,33,-44,-42,-43,33,-19,33,33,-17,-18,-34,33,33,-15,-16,33,33,33,33,-22,33,33,33,33,33,33,-23,-21,]),'INTEGER':([10,15,16,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,48,49,50,55,56,57,59,65,66,67,68,69,70,71,72,73,74,78,80,82,83,84,85,86,87,88,90,91,95,98,99,100,101,102,],[-49,34,34,-34,34,-30,-31,-32,-33,-35,-36,-37,-38,-39,-45,-46,-47,-48,34,34,-24,-20,34,-11,34,-29,34,-40,-41,34,-44,-42,-43,34,-19,34,34,-17,-18,-34,34,34,-15,-16,34,34,34,34,-22,34,34,34,34,34,34,-23,-21,]),'BOOLEAN':([10,15,16,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,48,49,50,55,56,57,59,65,66,67,68,69,70,71,72,73,74,78,80,82,83,84,85,86,87,88,90,91,95,98,99,100,101,102,],[-49,35,35,-34,35,-30,-31,-32,-33,-35,-36,-37,-38,-39,-45,-46,-47,-48,35,35,-24,-20,35,-11,35,-29,35,-40,-41,35,-44,-42,-43,35,-19,35,35,-17,-18,-34,35,35,-15,-16,35,35,35,35,-22,35,35,35,35,35,35,-23,-21,]),'STRING':([10,15,16,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,48,49,50,55,56,57,59,65,66,67,68,69,70,71,72,73,74,78,80,82,83,84,85,86,87,88,90,91,95,98,99,100,101,102,],[-49,36,36,-34,36,-30,-31,-32,-33,-35,-36,-37,-38,-39,-45,-46,-47,-48,36,36,-24,-20,36,-11,36,-29,36,-40,-41,36,-44,-42,-43,36,-19,36,36,-17,-18,-34,36,36,-15,-16,36,36,36,36,-22,36,36,36,36,36,36,-23,-21,]),'[':([10,15,16,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,48,49,50,55,56,57,59,65,66,67,68,69,70,71,72,73,74,78,80,82,83,84,85,86,87,88,90,91,95,98,99,100,101,102,],[-49,37,37,-34,37,-30,-31,-32,-33,-35,-36,-37,-38,-39,-45,-46,-47,-48,37,37,-24,-20,37,-11,37,-29,37,-40,-41,37,-44,-42,-43,37,-19,37,37,-17,-18,-34,37,37,-15,-16,37,37,37,37,-22,37,37,37,37,37,37,-23,-21,]),'{':([10,15,16,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,48,49,50,55,56,57,58,59,63,65,66,67,68,69,70,71,72,73,74,75,76,78,80,82,83,84,85,86,87,88,89,90,91,94,95,98,99,100,101,102,],[-49,38,38,-34,38,-30,-31,-32,-33,-35,-36,-37,-38,-39,-45,-46,-47,-48,38,38,-24,-20,38,59,-11,38,-29,38,-40,-41,70,38,78,-44,-42,-43,38,-19,38,38,-17,-18,-34,84,85,38,38,-15,-16,38,38,38,38,-22,95,38,38,98,38,38,38,38,-23,-21,]),']':([10,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,48,49,50,51,64,65,66,67,],[-49,-34,-28,-50,-30,-31,-32,-33,-35,-36,-37,-38,-39,-45,-46,-47,-48,-50,-11,-50,-29,65,-27,-44,-42,-43,]),':':([10,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,48,50,53,54,65,66,67,87,],[-49,-34,-50,-30,-31,-32,-33,-35,-36,-37,-38,-39,-45,-46,-47,-48,-50,-11,-29,-37,68,-44,-42,-43,-50,]),'CATCH':([81,],[89,]),'ELSE':([88,],[94,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'run':([0,],[1,]),'program':([0,],[2,]),'function':([0,2,],[3,11,]),'function_call':([0,2,15,16,23,37,38,41,49,55,59,68,70,71,78,80,84,85,86,87,90,91,95,98,99,100,],[4,12,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'variable':([0,2,59,70,71,78,80,84,85,86,90,91,95,98,99,100,],[5,13,73,73,83,73,83,73,73,83,83,83,73,73,83,83,]),'id':([0,2,6,8,9,15,16,19,23,37,38,41,43,44,49,55,59,62,68,70,71,78,80,84,85,86,87,90,91,95,98,99,100,],[7,7,14,17,18,20,20,45,20,20,20,20,45,45,20,20,74,45,20,74,74,74,74,74,74,74,20,74,74,74,74,74,74,]),'term_list':([15,37,],[21,51,]),'term':([15,16,23,37,38,41,49,55,59,68,70,71,78,80,84,85,86,87,90,91,95,98,99,100,],[22,40,50,22,54,40,64,40,40,79,40,40,40,40,40,40,40,54,40,40,40,40,40,40,]),'unop':([15,16,23,37,38,41,49,55,59,68,70,71,78,80,84,85,86,87,90,91,95,98,99,100,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'number':([15,16,23,37,38,41,49,55,59,68,70,71,78,80,84,85,86,87,90,91,95,98,99,100,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'boolean':([15,16,23,37,38,41,49,55,59,68,70,71,78,80,84,85,86,87,90,91,95,98,99,100,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'string':([15,16,23,37,38,41,49,55,59,68,70,71,78,80,84,85,86,87,90,91,95,98,99,100,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'list':([15,16,23,37,38,41,49,55,59,68,70,71,78,80,84,85,86,87,90,91,95,98,99,100,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'dict':([15,16,23,37,38,41,49,55,59,68,70,71,78,80,84,85,86,87,90,91,95,98,99,100,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'empty':([15,16,19,23,37,38,41,43,44,49,55,59,62,68,70,71,78,80,84,85,86,87,90,91,95,98,99,100,],[30,30,47,30,30,53,30,47,47,30,30,30,47,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'exp':([16,41,55,59,70,71,78,80,84,85,86,90,91,95,98,99,100,],[39,58,69,72,72,82,72,82,72,72,82,82,82,72,72,82,82,]),'parameter':([19,43,44,62,],[46,60,61,77,]),'term_map':([38,87,],[52,93,]),'binop':([40,],[55,]),'body':([59,70,78,84,85,95,98,],[71,80,86,90,91,99,100,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> run","S'",1,None,None,None),
  ('run -> program','run',1,'p_run','main.py',80),
  ('program -> program function','program',2,'p_program','main.py',86),
  ('program -> program function_call','program',2,'p_program','main.py',87),
  ('program -> program variable','program',2,'p_program','main.py',88),
  ('program -> function','program',1,'p_program','main.py',89),
  ('program -> function_call','program',1,'p_program','main.py',90),
  ('program -> variable','program',1,'p_program','main.py',91),
  ('function -> FN id ( parameter ) { body }','function',8,'p_function','main.py',100),
  ('function -> COMMAND id ( parameter ) { body }','function',8,'p_function','main.py',101),
  ('function -> HANDLER id ( parameter ) { body }','function',8,'p_function','main.py',102),
  ('function_call -> id ( term_list )','function_call',4,'p_function_call','main.py',108),
  ('parameter -> id , parameter','parameter',3,'p_parameter','main.py',114),
  ('parameter -> id','parameter',1,'p_parameter','main.py',115),
  ('parameter -> empty','parameter',1,'p_parameter','main.py',116),
  ('body -> body exp','body',2,'p_body','main.py',125),
  ('body -> body variable','body',2,'p_body','main.py',126),
  ('body -> exp','body',1,'p_body','main.py',127),
  ('body -> variable','body',1,'p_body','main.py',128),
  ('exp -> term binop exp','exp',3,'p_exp','main.py',137),
  ('exp -> term','exp',1,'p_exp','main.py',138),
  ('exp -> IF exp { body } ELSE { body }','exp',9,'p_exp','main.py',139),
  ('exp -> IF exp { body }','exp',5,'p_exp','main.py',140),
  ('exp -> TRY { body } CATCH { body }','exp',8,'p_exp','main.py',141),
  ('variable -> id = exp','variable',3,'p_variable','main.py',156),
  ('term_map -> term : term , term_map','term_map',5,'p_term_map','main.py',162),
  ('term_map -> term : term','term_map',3,'p_term_map','main.py',163),
  ('term_list -> term_list , term','term_list',3,'p_term_list','main.py',172),
  ('term_list -> term','term_list',1,'p_term_list','main.py',173),
  ('term -> unop term','term',2,'p_term','main.py',182),
  ('term -> number','term',1,'p_term','main.py',183),
  ('term -> boolean','term',1,'p_term','main.py',184),
  ('term -> string','term',1,'p_term','main.py',185),
  ('term -> function_call','term',1,'p_term','main.py',186),
  ('term -> id','term',1,'p_term','main.py',187),
  ('term -> list','term',1,'p_term','main.py',188),
  ('term -> dict','term',1,'p_term','main.py',189),
  ('term -> empty','term',1,'p_term','main.py',190),
  ('unop -> SIGN','unop',1,'p_unop','main.py',199),
  ('unop -> UNITARY_OPERATOR','unop',1,'p_unop','main.py',200),
  ('binop -> SIGN','binop',1,'p_binop','main.py',206),
  ('binop -> BINARY_OPERATOR','binop',1,'p_binop','main.py',207),
  ('dict -> { term_map }','dict',3,'p_dict','main.py',213),
  ('dict -> { empty }','dict',3,'p_dict','main.py',214),
  ('list -> [ term_list ]','list',3,'p_list','main.py',220),
  ('number -> FLOAT','number',1,'p_number','main.py',226),
  ('number -> INTEGER','number',1,'p_number','main.py',227),
  ('boolean -> BOOLEAN','boolean',1,'p_boolean','main.py',233),
  ('string -> STRING','string',1,'p_string','main.py',239),
  ('id -> ID','id',1,'p_id','main.py',245),
  ('empty -> <empty>','empty',0,'p_empty','main.py',251),
]
