
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "BINARY_OPERATOR BOOLEAN CATCH COMMAND ELSE FLOAT FN HANDLER ID IF INTEGER SIGN STRING TRY UNITARY_OPERATOR\n    program : exp\n            | function\n    \n    function : FN ID '(' parameter ')' '{' body '}'\n             | COMMAND ID '(' parameter ')' '{' body '}'\n             | HANDLER ID '(' parameter ')' '{' body '}'\n    \n    function_call : ID '(' term_list ')' \n    \n    parameter : ID ',' parameter\n              | ID\n              | empty\n    \n    body : body exp\n         | body variable\n         | exp\n         | variable\n    \n    exp : term binop exp\n        | term\n        | IF exp '{' body '}' ELSE '{' body '}'\n        | IF exp '{' body '}'\n        | TRY '{' body '}' CATCH '{' body '}'\n    \n    variable : ID '=' exp \n    \n    term_map : term ':' term ',' term_map\n             | term ':' term\n    \n    term_list : term_list ',' term\n              | term\n    \n    term : unop term\n         | number\n         | boolean\n         | string\n         | function_call\n         | ID\n         | list\n         | dict\n         | empty\n    \n    unop : SIGN\n         | UNITARY_OPERATOR\n    \n    binop : SIGN\n          | BINARY_OPERATOR\n    \n    dict : '{' term_map '}'\n         | '{' empty '}'\n    \n    list : '[' term_list ']'\n    \n    number : FLOAT\n           | INTEGER\n    \n    boolean : BOOLEAN\n    \n    string : STRING\n    \n    empty :\n    "
    
_lr_action_items = {'IF':([0,4,5,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,34,39,42,43,44,45,47,48,49,50,55,57,60,61,62,66,70,73,80,82,83,84,85,86,87,88,89,90,91,95,],[5,-15,5,-29,-44,-25,-26,-27,-28,-30,-31,-32,-33,-34,-40,-41,-42,-43,5,-35,-36,5,-24,-14,5,-37,-38,5,-12,-13,-29,-39,5,-10,-11,5,-6,-17,-19,5,5,5,5,5,5,5,5,5,5,-18,-16,]),'TRY':([0,4,5,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,34,39,42,43,44,45,47,48,49,50,55,57,60,61,62,66,70,73,80,82,83,84,85,86,87,88,89,90,91,95,],[7,-15,7,-29,-44,-25,-26,-27,-28,-30,-31,-32,-33,-34,-40,-41,-42,-43,7,-35,-36,7,-24,-14,7,-37,-38,7,-12,-13,-29,-39,7,-10,-11,7,-6,-17,-19,7,7,7,7,7,7,7,7,7,7,-18,-16,]),'FN':([0,],[8,]),'COMMAND':([0,],[10,]),'HANDLER':([0,],[11,]),'ID':([0,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,34,36,39,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,60,61,62,66,70,71,73,74,80,82,83,84,85,86,87,88,89,90,91,95,],[9,-15,9,9,35,-29,37,38,9,-25,-26,-27,-28,-30,-31,-32,-33,-34,-40,-41,-42,-43,9,9,-35,-36,50,9,-24,-14,50,-37,-38,9,50,-12,-13,-29,63,63,63,-39,9,50,-10,-11,9,-6,-17,9,-19,63,50,50,50,50,50,50,50,50,50,50,-18,-16,]),'SIGN':([0,4,5,6,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,34,36,39,42,43,44,45,46,47,48,49,50,55,56,57,60,61,62,66,70,71,73,80,82,83,84,85,86,87,88,89,90,91,95,],[20,28,20,20,-29,20,-25,-26,-27,-28,-30,-31,-32,-33,-34,-40,-41,-42,-43,20,20,-35,-36,20,20,-24,-14,20,-37,-38,20,20,-12,-13,-29,-39,20,20,-10,-11,20,-6,-17,20,-19,20,20,20,20,20,20,20,20,20,20,-18,-16,]),'UNITARY_OPERATOR':([0,4,5,6,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,34,36,39,42,43,44,45,46,47,48,49,50,55,56,57,60,61,62,66,70,71,73,80,82,83,84,85,86,87,88,89,90,91,95,],[21,-15,21,21,-29,21,-25,-26,-27,-28,-30,-31,-32,-33,-34,-40,-41,-42,-43,21,21,-35,-36,21,21,-24,-14,21,-37,-38,21,21,-12,-13,-29,-39,21,21,-10,-11,21,-6,-17,21,-19,21,21,21,21,21,21,21,21,21,21,-18,-16,]),'FLOAT':([0,4,5,6,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,34,36,39,42,43,44,45,46,47,48,49,50,55,56,57,60,61,62,66,70,71,73,80,82,83,84,85,86,87,88,89,90,91,95,],[22,-15,22,22,-29,22,-25,-26,-27,-28,-30,-31,-32,-33,-34,-40,-41,-42,-43,22,22,-35,-36,22,22,-24,-14,22,-37,-38,22,22,-12,-13,-29,-39,22,22,-10,-11,22,-6,-17,22,-19,22,22,22,22,22,22,22,22,22,22,-18,-16,]),'INTEGER':([0,4,5,6,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,34,36,39,42,43,44,45,46,47,48,49,50,55,56,57,60,61,62,66,70,71,73,80,82,83,84,85,86,87,88,89,90,91,95,],[23,-15,23,23,-29,23,-25,-26,-27,-28,-30,-31,-32,-33,-34,-40,-41,-42,-43,23,23,-35,-36,23,23,-24,-14,23,-37,-38,23,23,-12,-13,-29,-39,23,23,-10,-11,23,-6,-17,23,-19,23,23,23,23,23,23,23,23,23,23,-18,-16,]),'BOOLEAN':([0,4,5,6,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,34,36,39,42,43,44,45,46,47,48,49,50,55,56,57,60,61,62,66,70,71,73,80,82,83,84,85,86,87,88,89,90,91,95,],[24,-15,24,24,-29,24,-25,-26,-27,-28,-30,-31,-32,-33,-34,-40,-41,-42,-43,24,24,-35,-36,24,24,-24,-14,24,-37,-38,24,24,-12,-13,-29,-39,24,24,-10,-11,24,-6,-17,24,-19,24,24,24,24,24,24,24,24,24,24,-18,-16,]),'STRING':([0,4,5,6,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,34,36,39,42,43,44,45,46,47,48,49,50,55,56,57,60,61,62,66,70,71,73,80,82,83,84,85,86,87,88,89,90,91,95,],[25,-15,25,25,-29,25,-25,-26,-27,-28,-30,-31,-32,-33,-34,-40,-41,-42,-43,25,25,-35,-36,25,25,-24,-14,25,-37,-38,25,25,-12,-13,-29,-39,25,25,-10,-11,25,-6,-17,25,-19,25,25,25,25,25,25,25,25,25,25,-18,-16,]),'[':([0,4,5,6,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,34,36,39,42,43,44,45,46,47,48,49,50,55,56,57,60,61,62,66,70,71,73,80,82,83,84,85,86,87,88,89,90,91,95,],[26,-15,26,26,-29,26,-25,-26,-27,-28,-30,-31,-32,-33,-34,-40,-41,-42,-43,26,26,-35,-36,26,26,-24,-14,26,-37,-38,26,26,-12,-13,-29,-39,26,26,-10,-11,26,-6,-17,26,-19,26,26,26,26,26,26,26,26,26,26,-18,-16,]),'{':([0,4,5,6,7,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,34,36,39,42,43,44,45,46,47,48,49,50,55,56,57,60,61,62,66,70,71,72,73,75,76,77,78,80,82,83,84,85,86,87,88,89,90,91,95,],[6,-15,6,6,34,-29,6,-25,-26,-27,-28,-30,-31,-32,-33,-34,-40,-41,-42,-43,6,6,-35,-36,43,6,6,-24,-14,6,-37,-38,6,6,-12,-13,-29,-39,6,6,-10,-11,6,-6,-17,6,80,-19,82,83,84,85,6,6,6,6,6,6,6,6,6,6,-18,-16,]),'BINARY_OPERATOR':([0,4,5,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,34,39,42,43,44,45,47,48,49,50,55,57,60,61,62,66,70,73,80,82,83,84,85,86,87,88,89,90,91,95,],[-44,29,-44,-29,-44,-25,-26,-27,-28,-30,-31,-32,-33,-34,-40,-41,-42,-43,-44,-35,-36,-44,-24,-14,-44,-37,-38,-44,-12,-13,-29,-39,-44,-10,-11,-44,-6,-17,-19,-44,-44,-44,-44,-44,-44,-44,-44,-44,-44,-18,-16,]),'$end':([0,1,2,3,4,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,39,42,44,45,55,66,70,91,92,93,94,95,],[-44,0,-1,-2,-15,-29,-44,-25,-26,-27,-28,-30,-31,-32,-33,-34,-40,-41,-42,-43,-44,-35,-36,-24,-14,-37,-38,-39,-6,-17,-18,-3,-4,-5,-16,]),'}':([4,6,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,31,32,34,39,42,43,44,45,46,47,48,49,50,55,57,58,60,61,62,66,70,73,79,80,82,83,84,85,86,87,88,89,90,91,95,],[-15,-44,-29,-44,-25,-26,-27,-28,-30,-31,-32,-33,-34,-40,-41,-42,-43,-44,-35,-36,44,45,-44,-24,-14,-44,-37,-38,-44,59,-12,-13,-29,-39,70,-21,-10,-11,-44,-6,-17,-19,-20,-44,-44,-44,-44,-44,91,92,93,94,95,-18,-16,]),':':([6,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,32,33,39,44,45,55,66,71,],[-44,-29,-44,-25,-26,-27,-28,-30,-31,-32,-33,-34,-40,-41,-42,-43,-32,46,-24,-37,-38,-39,-6,-44,]),']':([9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,39,40,41,44,45,55,56,66,69,],[-29,-44,-25,-26,-27,-28,-30,-31,-32,-33,-34,-40,-41,-42,-43,-44,-24,55,-23,-37,-38,-39,-44,-6,-22,]),',':([9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,36,39,40,41,44,45,46,52,55,56,58,63,66,69,],[-29,-44,-25,-26,-27,-28,-30,-31,-32,-33,-34,-40,-41,-42,-43,-44,-44,-24,56,-23,-37,-38,-44,56,-39,-44,71,74,-6,-22,]),')':([9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,36,39,41,44,45,51,52,53,54,55,56,63,64,65,66,67,68,69,74,81,],[-29,-44,-25,-26,-27,-28,-30,-31,-32,-33,-34,-40,-41,-42,-43,-44,-24,-23,-37,-38,-44,66,-44,-44,-39,-44,-8,75,-9,-6,76,77,-22,-44,-7,]),'(':([9,35,37,38,50,],[36,51,53,54,36,]),'=':([50,],[62,]),'CATCH':([59,],[72,]),'ELSE':([70,],[78,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'exp':([0,5,27,34,43,47,57,62,80,82,83,84,85,86,87,88,89,90,],[2,30,42,48,48,60,60,73,48,48,48,48,48,60,60,60,60,60,]),'function':([0,],[3,]),'term':([0,5,6,12,26,27,34,36,43,46,47,56,57,62,71,80,82,83,84,85,86,87,88,89,90,],[4,4,33,39,41,4,4,41,4,58,4,69,4,4,33,4,4,4,4,4,4,4,4,4,4,]),'unop':([0,5,6,12,26,27,34,36,43,46,47,56,57,62,71,80,82,83,84,85,86,87,88,89,90,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'number':([0,5,6,12,26,27,34,36,43,46,47,56,57,62,71,80,82,83,84,85,86,87,88,89,90,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'boolean':([0,5,6,12,26,27,34,36,43,46,47,56,57,62,71,80,82,83,84,85,86,87,88,89,90,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'string':([0,5,6,12,26,27,34,36,43,46,47,56,57,62,71,80,82,83,84,85,86,87,88,89,90,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'function_call':([0,5,6,12,26,27,34,36,43,46,47,56,57,62,71,80,82,83,84,85,86,87,88,89,90,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'list':([0,5,6,12,26,27,34,36,43,46,47,56,57,62,71,80,82,83,84,85,86,87,88,89,90,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'dict':([0,5,6,12,26,27,34,36,43,46,47,56,57,62,71,80,82,83,84,85,86,87,88,89,90,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'empty':([0,5,6,12,26,27,34,36,43,46,47,51,53,54,56,57,62,71,74,80,82,83,84,85,86,87,88,89,90,],[19,19,32,19,19,19,19,19,19,19,19,65,65,65,19,19,19,19,65,19,19,19,19,19,19,19,19,19,19,]),'binop':([4,],[27,]),'term_map':([6,71,],[31,79,]),'term_list':([26,36,],[40,52,]),'body':([34,43,80,82,83,84,85,],[47,57,86,87,88,89,90,]),'variable':([34,43,47,57,80,82,83,84,85,86,87,88,89,90,],[49,49,61,61,49,49,49,49,49,61,61,61,61,61,]),'parameter':([51,53,54,74,],[64,67,68,81,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> exp','program',1,'p_program','main.py',77),
  ('program -> function','program',1,'p_program','main.py',78),
  ('function -> FN ID ( parameter ) { body }','function',8,'p_function','main.py',84),
  ('function -> COMMAND ID ( parameter ) { body }','function',8,'p_function','main.py',85),
  ('function -> HANDLER ID ( parameter ) { body }','function',8,'p_function','main.py',86),
  ('function_call -> ID ( term_list )','function_call',4,'p_function_call','main.py',92),
  ('parameter -> ID , parameter','parameter',3,'p_parameter','main.py',98),
  ('parameter -> ID','parameter',1,'p_parameter','main.py',99),
  ('parameter -> empty','parameter',1,'p_parameter','main.py',100),
  ('body -> body exp','body',2,'p_body','main.py',109),
  ('body -> body variable','body',2,'p_body','main.py',110),
  ('body -> exp','body',1,'p_body','main.py',111),
  ('body -> variable','body',1,'p_body','main.py',112),
  ('exp -> term binop exp','exp',3,'p_exp','main.py',121),
  ('exp -> term','exp',1,'p_exp','main.py',122),
  ('exp -> IF exp { body } ELSE { body }','exp',9,'p_exp','main.py',123),
  ('exp -> IF exp { body }','exp',5,'p_exp','main.py',124),
  ('exp -> TRY { body } CATCH { body }','exp',8,'p_exp','main.py',125),
  ('variable -> ID = exp','variable',3,'p_variable','main.py',140),
  ('term_map -> term : term , term_map','term_map',5,'p_term_map','main.py',146),
  ('term_map -> term : term','term_map',3,'p_term_map','main.py',147),
  ('term_list -> term_list , term','term_list',3,'p_term_list','main.py',156),
  ('term_list -> term','term_list',1,'p_term_list','main.py',157),
  ('term -> unop term','term',2,'p_term','main.py',166),
  ('term -> number','term',1,'p_term','main.py',167),
  ('term -> boolean','term',1,'p_term','main.py',168),
  ('term -> string','term',1,'p_term','main.py',169),
  ('term -> function_call','term',1,'p_term','main.py',170),
  ('term -> ID','term',1,'p_term','main.py',171),
  ('term -> list','term',1,'p_term','main.py',172),
  ('term -> dict','term',1,'p_term','main.py',173),
  ('term -> empty','term',1,'p_term','main.py',174),
  ('unop -> SIGN','unop',1,'p_unop','main.py',183),
  ('unop -> UNITARY_OPERATOR','unop',1,'p_unop','main.py',184),
  ('binop -> SIGN','binop',1,'p_binop','main.py',190),
  ('binop -> BINARY_OPERATOR','binop',1,'p_binop','main.py',191),
  ('dict -> { term_map }','dict',3,'p_dict','main.py',197),
  ('dict -> { empty }','dict',3,'p_dict','main.py',198),
  ('list -> [ term_list ]','list',3,'p_list','main.py',204),
  ('number -> FLOAT','number',1,'p_number','main.py',210),
  ('number -> INTEGER','number',1,'p_number','main.py',211),
  ('boolean -> BOOLEAN','boolean',1,'p_boolean','main.py',217),
  ('string -> STRING','string',1,'p_string','main.py',223),
  ('empty -> <empty>','empty',0,'p_empty','main.py',229),
]
