
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "BINARY_OPERATOR BOOLEAN CATCH COMMAND ELSE FLOAT FN ID IF INTEGER SIGN STRING TOKEN TRY UNITARY_OPERATOR\n    run : program\n    \n    program : program function\n            | program function_call\n            | program variable\n            | program token\n            | function\n            | function_call\n            | variable\n            | token\n    \n    function : FN id '(' parameter ')' '{' body '}'\n             | COMMAND id '(' parameter ')' '{' body '}'\n    \n    token : TOKEN '(' string ')'\n    \n    function_call : id '(' term_list ')' \n    \n    parameter : id ',' parameter\n              | id\n              | empty\n    \n    body : body exp\n         | body variable\n         | exp\n         | variable\n    \n    exp : term binop exp\n        | term\n        | IF exp '{' body '}' ELSE '{' body '}'\n        | IF exp '{' body '}'\n        | TRY '{' body '}' CATCH '{' body '}'\n    \n    variable : id '=' exp \n    \n    term_map : term ':' term ',' term_map\n             | term ':' term\n    \n    term_list : term_list ',' term\n              | term\n    \n    term : unop term\n         | number\n         | boolean\n         | string\n         | function_call\n         | id\n         | list\n         | dict\n         | empty\n    \n    unop : SIGN\n         | UNITARY_OPERATOR\n    \n    binop : SIGN\n          | BINARY_OPERATOR\n    \n    dict : '{' term_map '}'\n         | '{' empty '}'\n    \n    list : '[' term_list ']'\n    \n    number : FLOAT\n           | INTEGER\n    \n    boolean : BOOLEAN\n    \n    string : STRING\n    \n    id : ID\n    \n    empty :\n    "
    
_lr_action_items = {'FN':([0,2,3,4,5,6,11,12,13,14,15,18,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,42,50,52,57,58,59,63,67,68,69,71,88,91,95,99,100,],[7,7,-6,-7,-8,-9,-51,-2,-3,-4,-5,-52,-36,-52,-32,-33,-34,-35,-37,-38,-39,-40,-41,-47,-48,-49,-50,-26,-22,-13,-31,-52,-42,-43,-12,-46,-44,-45,-21,-24,-10,-11,-25,-23,]),'COMMAND':([0,2,3,4,5,6,11,12,13,14,15,18,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,42,50,52,57,58,59,63,67,68,69,71,88,91,95,99,100,],[9,9,-6,-7,-8,-9,-51,-2,-3,-4,-5,-52,-36,-52,-32,-33,-34,-35,-37,-38,-39,-40,-41,-47,-48,-49,-50,-26,-22,-13,-31,-52,-42,-43,-12,-46,-44,-45,-21,-24,-10,-11,-25,-23,]),'TOKEN':([0,2,3,4,5,6,11,12,13,14,15,18,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,42,50,52,57,58,59,63,67,68,69,71,88,91,95,99,100,],[10,10,-6,-7,-8,-9,-51,-2,-3,-4,-5,-52,-36,-52,-32,-33,-34,-35,-37,-38,-39,-40,-41,-47,-48,-49,-50,-26,-22,-13,-31,-52,-42,-43,-12,-46,-44,-45,-21,-24,-10,-11,-25,-23,]),'ID':([0,2,3,4,5,6,7,9,11,12,13,14,15,17,18,21,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,50,51,52,57,58,59,61,63,64,67,68,69,70,71,72,73,74,75,76,79,81,83,84,85,86,87,88,90,91,94,95,96,97,98,99,100,],[11,11,-6,-7,-8,-9,11,11,-51,-2,-3,-4,-5,11,11,11,-36,11,-32,-33,-34,-35,-37,-38,-39,-40,-41,-47,-48,-49,-50,11,11,-26,-22,11,11,-13,11,-31,11,-42,-43,11,-12,11,-46,-44,-45,11,-21,11,11,-19,-20,-36,11,11,-17,-18,11,11,11,-24,11,-10,11,-11,11,11,11,-25,-23,]),'$end':([1,2,3,4,5,6,11,12,13,14,15,18,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,42,50,52,57,58,59,63,67,68,69,71,88,91,95,99,100,],[0,-1,-6,-7,-8,-9,-51,-2,-3,-4,-5,-52,-36,-52,-32,-33,-34,-35,-37,-38,-39,-40,-41,-47,-48,-49,-50,-26,-22,-13,-31,-52,-42,-43,-12,-46,-44,-45,-21,-24,-10,-11,-25,-23,]),'(':([8,10,11,16,19,22,76,],[17,20,-51,21,45,17,17,]),'=':([8,11,76,],[18,-51,18,]),')':([11,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,45,46,47,48,49,50,51,52,62,64,66,67,68,69,78,],[-51,-52,-52,-36,50,-30,-52,-32,-33,-34,-35,-37,-38,-39,-40,-41,-47,-48,-49,-50,-52,63,-15,65,-16,-13,-52,-31,77,-52,-29,-46,-44,-45,-14,]),',':([11,17,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,47,50,51,52,53,66,67,68,69,70,80,],[-51,-52,-36,51,-30,-52,-32,-33,-34,-35,-37,-38,-39,-40,-41,-47,-48,-49,-50,-52,64,-13,-52,-31,51,-29,-46,-44,-45,-52,87,]),'SIGN':([11,17,18,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,50,51,52,57,58,59,61,67,68,69,70,71,72,73,74,75,76,79,81,83,84,85,86,87,88,90,94,96,97,98,99,100,],[-51,33,33,-36,33,-32,-33,-34,-35,-37,-38,-39,-40,-41,-47,-48,-49,-50,33,33,-26,58,33,-13,33,-31,33,-42,-43,33,-46,-44,-45,33,-21,33,33,-19,-20,-36,33,33,-17,-18,33,33,33,-24,33,33,33,33,33,-25,-23,]),'BINARY_OPERATOR':([11,18,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,42,43,50,52,57,58,59,61,67,68,69,71,72,73,74,75,76,79,81,83,84,85,86,88,90,94,96,97,98,99,100,],[-51,-52,-36,-52,-32,-33,-34,-35,-37,-38,-39,-40,-41,-47,-48,-49,-50,-26,59,-52,-13,-31,-52,-42,-43,-52,-46,-44,-45,-21,-52,-52,-19,-20,-36,-52,-52,-17,-18,-52,-52,-24,-52,-52,-52,-52,-52,-25,-23,]),'}':([11,18,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,50,52,54,55,57,58,59,61,67,68,69,70,71,72,73,74,75,76,79,80,81,83,84,85,86,88,90,92,94,96,97,98,99,100,],[-51,-52,-36,-52,-32,-33,-34,-35,-37,-38,-39,-40,-41,-47,-48,-49,-50,-52,-26,-22,-13,-31,68,69,-52,-42,-43,-52,-46,-44,-45,-52,-21,-52,82,-19,-20,-36,-52,-28,88,-17,-18,-52,91,-24,95,-27,-52,-52,99,100,-25,-23,]),'IF':([11,18,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,42,43,50,52,57,58,59,61,67,68,69,71,72,73,74,75,76,79,81,83,84,85,86,88,90,94,96,97,98,99,100,],[-51,43,-36,-52,-32,-33,-34,-35,-37,-38,-39,-40,-41,-47,-48,-49,-50,-26,-22,43,-13,-31,43,-42,-43,43,-46,-44,-45,-21,43,43,-19,-20,-36,43,43,-17,-18,43,43,-24,43,43,43,43,43,-25,-23,]),'TRY':([11,18,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,42,43,50,52,57,58,59,61,67,68,69,71,72,73,74,75,76,79,81,83,84,85,86,88,90,94,96,97,98,99,100,],[-51,44,-36,-52,-32,-33,-34,-35,-37,-38,-39,-40,-41,-47,-48,-49,-50,-26,-22,44,-13,-31,44,-42,-43,44,-46,-44,-45,-21,44,44,-19,-20,-36,44,44,-17,-18,44,44,-24,44,44,44,44,44,-25,-23,]),'UNITARY_OPERATOR':([11,17,18,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,50,51,52,57,58,59,61,67,68,69,70,71,72,73,74,75,76,79,81,83,84,85,86,87,88,90,94,96,97,98,99,100,],[-51,34,34,-36,34,-32,-33,-34,-35,-37,-38,-39,-40,-41,-47,-48,-49,-50,34,34,-26,-22,34,-13,34,-31,34,-42,-43,34,-46,-44,-45,34,-21,34,34,-19,-20,-36,34,34,-17,-18,34,34,34,-24,34,34,34,34,34,-25,-23,]),'FLOAT':([11,17,18,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,50,51,52,57,58,59,61,67,68,69,70,71,72,73,74,75,76,79,81,83,84,85,86,87,88,90,94,96,97,98,99,100,],[-51,35,35,-36,35,-32,-33,-34,-35,-37,-38,-39,-40,-41,-47,-48,-49,-50,35,35,-26,-22,35,-13,35,-31,35,-42,-43,35,-46,-44,-45,35,-21,35,35,-19,-20,-36,35,35,-17,-18,35,35,35,-24,35,35,35,35,35,-25,-23,]),'INTEGER':([11,17,18,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,50,51,52,57,58,59,61,67,68,69,70,71,72,73,74,75,76,79,81,83,84,85,86,87,88,90,94,96,97,98,99,100,],[-51,36,36,-36,36,-32,-33,-34,-35,-37,-38,-39,-40,-41,-47,-48,-49,-50,36,36,-26,-22,36,-13,36,-31,36,-42,-43,36,-46,-44,-45,36,-21,36,36,-19,-20,-36,36,36,-17,-18,36,36,36,-24,36,36,36,36,36,-25,-23,]),'BOOLEAN':([11,17,18,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,50,51,52,57,58,59,61,67,68,69,70,71,72,73,74,75,76,79,81,83,84,85,86,87,88,90,94,96,97,98,99,100,],[-51,37,37,-36,37,-32,-33,-34,-35,-37,-38,-39,-40,-41,-47,-48,-49,-50,37,37,-26,-22,37,-13,37,-31,37,-42,-43,37,-46,-44,-45,37,-21,37,37,-19,-20,-36,37,37,-17,-18,37,37,37,-24,37,37,37,37,37,-25,-23,]),'STRING':([11,17,18,20,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,50,51,52,57,58,59,61,67,68,69,70,71,72,73,74,75,76,79,81,83,84,85,86,87,88,90,94,96,97,98,99,100,],[-51,38,38,38,-36,38,-32,-33,-34,-35,-37,-38,-39,-40,-41,-47,-48,-49,-50,38,38,-26,-22,38,-13,38,-31,38,-42,-43,38,-46,-44,-45,38,-21,38,38,-19,-20,-36,38,38,-17,-18,38,38,38,-24,38,38,38,38,38,-25,-23,]),'[':([11,17,18,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,50,51,52,57,58,59,61,67,68,69,70,71,72,73,74,75,76,79,81,83,84,85,86,87,88,90,94,96,97,98,99,100,],[-51,39,39,-36,39,-32,-33,-34,-35,-37,-38,-39,-40,-41,-47,-48,-49,-50,39,39,-26,-22,39,-13,39,-31,39,-42,-43,39,-46,-44,-45,39,-21,39,39,-19,-20,-36,39,39,-17,-18,39,39,39,-24,39,39,39,39,39,-25,-23,]),'{':([11,17,18,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,50,51,52,57,58,59,60,61,65,67,68,69,70,71,72,73,74,75,76,77,79,81,83,84,85,86,87,88,89,90,93,94,96,97,98,99,100,],[-51,40,40,-36,40,-32,-33,-34,-35,-37,-38,-39,-40,-41,-47,-48,-49,-50,40,40,-26,-22,40,61,-13,40,-31,40,-42,-43,72,40,79,-46,-44,-45,40,-21,40,40,-19,-20,-36,85,40,40,-17,-18,40,40,40,-24,94,40,96,40,40,40,40,-25,-23,]),']':([11,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,50,51,52,53,66,67,68,69,],[-51,-36,-30,-52,-32,-33,-34,-35,-37,-38,-39,-40,-41,-47,-48,-49,-50,-52,-13,-52,-31,67,-29,-46,-44,-45,]),':':([11,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,50,52,55,56,67,68,69,87,],[-51,-36,-52,-32,-33,-34,-35,-37,-38,-39,-40,-41,-47,-48,-49,-50,-52,-13,-31,-39,70,-46,-44,-45,-52,]),'CATCH':([82,],[89,]),'ELSE':([88,],[93,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'run':([0,],[1,]),'program':([0,],[2,]),'function':([0,2,],[3,12,]),'function_call':([0,2,17,18,25,39,40,43,51,57,61,70,72,73,79,81,85,86,87,90,94,96,97,98,],[4,13,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'variable':([0,2,61,72,73,79,81,85,86,90,94,96,97,98,],[5,14,75,75,84,75,84,75,84,84,75,75,84,84,]),'token':([0,2,],[6,15,]),'id':([0,2,7,9,17,18,21,25,39,40,43,45,51,57,61,64,70,72,73,79,81,85,86,87,90,94,96,97,98,],[8,8,16,19,22,22,47,22,22,22,22,47,22,22,76,47,22,76,76,76,76,76,76,22,76,76,76,76,76,]),'term_list':([17,39,],[23,53,]),'term':([17,18,25,39,40,43,51,57,61,70,72,73,79,81,85,86,87,90,94,96,97,98,],[24,42,52,24,56,42,66,42,42,80,42,42,42,42,42,42,56,42,42,42,42,42,]),'unop':([17,18,25,39,40,43,51,57,61,70,72,73,79,81,85,86,87,90,94,96,97,98,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'number':([17,18,25,39,40,43,51,57,61,70,72,73,79,81,85,86,87,90,94,96,97,98,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'boolean':([17,18,25,39,40,43,51,57,61,70,72,73,79,81,85,86,87,90,94,96,97,98,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'string':([17,18,20,25,39,40,43,51,57,61,70,72,73,79,81,85,86,87,90,94,96,97,98,],[28,28,46,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'list':([17,18,25,39,40,43,51,57,61,70,72,73,79,81,85,86,87,90,94,96,97,98,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'dict':([17,18,25,39,40,43,51,57,61,70,72,73,79,81,85,86,87,90,94,96,97,98,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'empty':([17,18,21,25,39,40,43,45,51,57,61,64,70,72,73,79,81,85,86,87,90,94,96,97,98,],[32,32,49,32,32,55,32,49,32,32,32,49,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'exp':([18,43,57,61,72,73,79,81,85,86,90,94,96,97,98,],[41,60,71,74,74,83,74,83,74,83,83,74,74,83,83,]),'parameter':([21,45,64,],[48,62,78,]),'term_map':([40,87,],[54,92,]),'binop':([42,],[57,]),'body':([61,72,79,85,94,96,],[73,81,86,90,97,98,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> run","S'",1,None,None,None),
  ('run -> program','run',1,'p_run','main.py',79),
  ('program -> program function','program',2,'p_program','main.py',87),
  ('program -> program function_call','program',2,'p_program','main.py',88),
  ('program -> program variable','program',2,'p_program','main.py',89),
  ('program -> program token','program',2,'p_program','main.py',90),
  ('program -> function','program',1,'p_program','main.py',91),
  ('program -> function_call','program',1,'p_program','main.py',92),
  ('program -> variable','program',1,'p_program','main.py',93),
  ('program -> token','program',1,'p_program','main.py',94),
  ('function -> FN id ( parameter ) { body }','function',8,'p_function','main.py',103),
  ('function -> COMMAND id ( parameter ) { body }','function',8,'p_function','main.py',104),
  ('token -> TOKEN ( string )','token',4,'p_token','main.py',110),
  ('function_call -> id ( term_list )','function_call',4,'p_function_call','main.py',116),
  ('parameter -> id , parameter','parameter',3,'p_parameter','main.py',122),
  ('parameter -> id','parameter',1,'p_parameter','main.py',123),
  ('parameter -> empty','parameter',1,'p_parameter','main.py',124),
  ('body -> body exp','body',2,'p_body','main.py',133),
  ('body -> body variable','body',2,'p_body','main.py',134),
  ('body -> exp','body',1,'p_body','main.py',135),
  ('body -> variable','body',1,'p_body','main.py',136),
  ('exp -> term binop exp','exp',3,'p_exp','main.py',145),
  ('exp -> term','exp',1,'p_exp','main.py',146),
  ('exp -> IF exp { body } ELSE { body }','exp',9,'p_exp','main.py',147),
  ('exp -> IF exp { body }','exp',5,'p_exp','main.py',148),
  ('exp -> TRY { body } CATCH { body }','exp',8,'p_exp','main.py',149),
  ('variable -> id = exp','variable',3,'p_variable','main.py',164),
  ('term_map -> term : term , term_map','term_map',5,'p_term_map','main.py',170),
  ('term_map -> term : term','term_map',3,'p_term_map','main.py',171),
  ('term_list -> term_list , term','term_list',3,'p_term_list','main.py',180),
  ('term_list -> term','term_list',1,'p_term_list','main.py',181),
  ('term -> unop term','term',2,'p_term','main.py',190),
  ('term -> number','term',1,'p_term','main.py',191),
  ('term -> boolean','term',1,'p_term','main.py',192),
  ('term -> string','term',1,'p_term','main.py',193),
  ('term -> function_call','term',1,'p_term','main.py',194),
  ('term -> id','term',1,'p_term','main.py',195),
  ('term -> list','term',1,'p_term','main.py',196),
  ('term -> dict','term',1,'p_term','main.py',197),
  ('term -> empty','term',1,'p_term','main.py',198),
  ('unop -> SIGN','unop',1,'p_unop','main.py',207),
  ('unop -> UNITARY_OPERATOR','unop',1,'p_unop','main.py',208),
  ('binop -> SIGN','binop',1,'p_binop','main.py',214),
  ('binop -> BINARY_OPERATOR','binop',1,'p_binop','main.py',215),
  ('dict -> { term_map }','dict',3,'p_dict','main.py',221),
  ('dict -> { empty }','dict',3,'p_dict','main.py',222),
  ('list -> [ term_list ]','list',3,'p_list','main.py',228),
  ('number -> FLOAT','number',1,'p_number','main.py',234),
  ('number -> INTEGER','number',1,'p_number','main.py',235),
  ('boolean -> BOOLEAN','boolean',1,'p_boolean','main.py',241),
  ('string -> STRING','string',1,'p_string','main.py',247),
  ('id -> ID','id',1,'p_id','main.py',253),
  ('empty -> <empty>','empty',0,'p_empty','main.py',259),
]
